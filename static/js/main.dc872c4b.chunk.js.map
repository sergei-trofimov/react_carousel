{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","images","props","itemWidth","step","frameSize","animationDuration","infinite","positionX","showNextSlide","setState","prev","maxCarouselLength","length","showPreviouslySlide","getItemWidth","e","value","getFrameSize","getStepSize","getAnimationDuration","makeFillModeOn","document","addEventListener","stopFillMode","autoSlider","event","keyCode","removeEventListener","clearInterval","sliderId","counter","setInterval","concat","this","carouselStyle","minWidth","transition","transform","fillMode","wrapper","boxShadow","padding","height","minHeight","carousel","display","flexDirection","justifyContent","alignItems","control","button","className","style","type","onClick","src","alt","maxWidth","map","image","key","Math","random","width","Slider","color","defaultValue","min","max","onChange","valueLabelDisplay","Button","fontFamily","textTransform","variant","React","Component","defaultProps","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dc872c4b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Slider, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    images: this.props.images,\n    itemWidth: this.props.itemWidth,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n    positionX: 0,\n  }\n\n  showNextSlide = () => {\n    this.setState((prev) => {\n      const maxCarouselLength\n        = prev.itemWidth * (prev.images.length - prev.frameSize);\n\n      return (\n        prev.positionX + (prev.itemWidth * prev.step) >= maxCarouselLength\n      )\n        ? ({ positionX: maxCarouselLength })\n        : ({ positionX: prev.positionX + (prev.itemWidth * prev.step) });\n    });\n  }\n\n  showPreviouslySlide = () => {\n    this.setState((prev) => {\n      if (prev.positionX - (prev.itemWidth * prev.step) <= 0) {\n        return { positionX: 0 };\n      }\n\n      return {\n        positionX: prev.positionX - (prev.itemWidth * prev.step),\n      };\n    });\n  }\n\n  getItemWidth = (e, value) => {\n    this.setState({\n      itemWidth: value,\n      positionX: 0,\n    });\n  }\n\n  getFrameSize = (e, value) => {\n    this.setState({\n      frameSize: value,\n      positionX: 0,\n    });\n  }\n\n  getStepSize = (e, value) => {\n    this.setState({\n      step: value,\n    });\n  }\n\n  getAnimationDuration = (e, value) => {\n    this.setState({\n      animationDuration: value * 1000,\n    });\n  }\n\n  makeFillModeOn = () => {\n    document.addEventListener('keydown', this.stopFillMode, false);\n    this.setState(prev => ({\n      infinite: true,\n      step: 1,\n      frameSize: 1,\n      itemWidth: 300,\n      positionX: 0,\n      images: [...prev.images],\n    }));\n    this.autoSlider();\n  }\n\n  stopFillMode = (event) => {\n    if (event.keyCode === 27) {\n      this.setState({\n        infinite: false,\n        step: 3,\n        frameSize: 3,\n        itemWidth: 130,\n        positionX: 0,\n        images: this.props.images,\n      });\n      document.removeEventListener('keydown', this.stopFillMode, false);\n      clearInterval(this.state.sliderId);\n    }\n  }\n\n  autoSlider = () => {\n    const { animationDuration } = this.state;\n    let counter = 1;\n\n    this.state.sliderId = setInterval(() => {\n      this.setState(prev => ({\n        positionX: prev.positionX + prev.itemWidth,\n      }));\n\n      counter += 1;\n\n      if (counter === this.state.images.length - 1) {\n        this.setState(prev => ({\n          images: [...prev.images].concat(prev.images),\n        }));\n      }\n    }, animationDuration);\n  }\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const carouselStyle = {\n      minWidth: `${images.length * itemWidth}px`,\n      transition: `transform ${animationDuration}ms`,\n      transform: `translateX(-${this.state.positionX}px)`,\n    };\n\n    const fillMode = {\n      wrapper: {\n        boxShadow: '0 20px 50px rgba(19, 17, 17, 0.8)',\n        padding: '0 70px',\n        height: '70vh',\n        minHeight: '520px',\n        transition: `max-width 0.5s ease,\n          height 0.5s ease,\n          background-color 0.5s ease`,\n      },\n      carousel: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 'min-content',\n        transition: 'height 0.5s ease',\n      },\n      control: {\n        display: 'none',\n      },\n      button: {\n        display: 'none',\n      },\n    };\n\n    return (\n      <div className=\"wrapper\" style={infinite ? fillMode.wrapper : null}>\n        <div className=\"carousel\" style={infinite ? fillMode.carousel : null}>\n          <button\n            className=\"carousel__btn\"\n            type=\"button\"\n            onClick={() => {\n              this.showPreviouslySlide();\n            }}\n            style={infinite ? fillMode.button : null}\n          >\n            <img\n              className=\"carousel__btn-prev\"\n              src=\"./img/arrow-icon.png\"\n              alt=\"previously\"\n            />\n          </button>\n          {\n            infinite\n              ? <p className=\"carousel__slide-show-text\">Slide show</p>\n              : null\n          }\n          <div\n            className=\"carousel__wrapper\"\n            style={{ maxWidth: `${frameSize * itemWidth}px` }}\n          >\n            <ul className=\"carousel__list\" style={{ ...carouselStyle }}>\n              {images.map(image => (\n                <li key={Math.random()} className=\"carousel__item\">\n                  <img\n                    src={image}\n                    alt=\"smile\"\n                    style={{ width: `${itemWidth}px` }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <button\n            className=\"carousel__btn\"\n            type=\"button\"\n            onClick={() => {\n              this.showNextSlide();\n            }}\n            style={infinite ? fillMode.button : null}\n          >\n            <img\n              className=\"carousel__btn-next\"\n              src=\"./img/arrow-icon.png\"\n              alt=\"previously\"\n            />\n          </button>\n        </div>\n        <div\n          className=\"carousel-control\"\n          style={infinite ? fillMode.control : null}\n        >\n          <div className=\"carousel-control__item-width\">\n            <p className=\"carousel-control__label\">Images width</p>\n            <Slider\n              className=\"carousel-control__slider\"\n              color=\"primary\"\n              defaultValue={itemWidth}\n              min={80}\n              max={200}\n              step={1}\n              key={`slider-${itemWidth}`}\n              onChange={this.getItemWidth}\n              valueLabelDisplay=\"auto\"\n            />\n          </div>\n          <div className=\"carousel-control__frame-size\">\n            <p className=\"carousel-control__label\">Show images</p>\n            <Slider\n              className=\"carousel-control__slider\"\n              color=\"primary\"\n              defaultValue={frameSize}\n              min={1}\n              max={5}\n              step={1}\n              key={`slider-${frameSize}`}\n              onChange={this.getFrameSize}\n              valueLabelDisplay=\"auto\"\n            />\n          </div>\n          <div className=\"carousel-control__step\">\n            <p className=\"carousel-control__label\">Step of scrolling</p>\n            <Slider\n              className=\"carousel-control__slider\"\n              color=\"primary\"\n              defaultValue={frameSize}\n              min={1}\n              max={5}\n              step={1}\n              key={`slider-${step}`}\n              onChange={this.getStepSize}\n              valueLabelDisplay=\"auto\"\n            />\n          </div>\n          <div className=\"carousel-control__animation\">\n            <p className=\"carousel-control__label\">Scroll duration(sec)</p>\n            <Slider\n              className=\"carousel-control__slider\"\n              color=\"primary\"\n              defaultValue={animationDuration / 1000}\n              min={1}\n              max={5}\n              step={1}\n              key={`slider-${animationDuration}`}\n              onChange={this.getAnimationDuration}\n              valueLabelDisplay=\"auto\"\n            />\n          </div>\n        </div>\n        <div className=\"carousel-film-mode\">\n          {\n            !infinite\n              ? (\n                <Button\n                  style={{\n                    fontFamily: 'inherit', textTransform: 'capitalize',\n                  }}\n                  className=\"carousel-film-mode__btn\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.makeFillModeOn();\n                  }}\n                >\n                  Slide Show\n                </Button>\n              )\n              : (\n                <p className=\"carousel-film-mode__text\">\n                  Press esc to exit slideshow mode\n                </p>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string),\n  itemWidth: PropTypes.number,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  images: [],\n  itemWidth: 130,\n  step: 1,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}